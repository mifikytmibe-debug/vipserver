#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Roblox VIP Link Bot (Telegram)
--------------------------------
‚Ä¢ –í—ã–¥–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ/VIP-—Å–µ—Ä–≤–µ—Ä—ã –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö Roblox –∏–≥—Ä –≤ –≤–∏–¥–µ –∫–Ω–æ–ø–æ–∫.
‚Ä¢ –£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–µ—Ä–µ–∑ Inline-–∫–Ω–æ–ø–∫–∏.
‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å —Å—Å—ã–ª–∫–∏ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
‚Ä¢ –í—Å–µ —Å—Å—ã–ª–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –≤–∏–¥–µ –∫–Ω–æ–ø–æ–∫, –∞ –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å—Å—ã–ª–æ–∫.
"""
import os
import re
import time
import logging
from typing import Dict, Optional
from dotenv import load_dotenv
import telebot
from telebot.types import (
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    Message,
    CallbackQuery,
)

# -------------------- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª --------------------
CHANNEL_USERNAME = "@thespikeacc"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –∫–∞–Ω–∞–ª

from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

def is_subscribed(user_id: int) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω, –∏–Ω–∞—á–µ False.
    """
    try:
        chat_member = bot.get_chat_member(CHANNEL_USERNAME, user_id)
        return chat_member.status in ["member", "administrator", "creator"]
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:", e)
        return False

@bot.message_handler(commands=["start"])
def cmd_start(message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start.
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É.
    –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    if not is_subscribed(message.from_user.id):
        kb = InlineKeyboardMarkup()
        kb.add(InlineKeyboardButton("‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=f"https://t.me/{CHANNEL_USERNAME.lstrip('@')}"))
        bot.send_message(
            message.chat.id,
            "üö´ –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª!",
            reply_markup=kb
        )
        return
    
    # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã ‚úÖ", reply_markup=main_menu_kb())


# -------------------- –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ --------------------
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN", "").strip()
if not BOT_TOKEN:
    raise RuntimeError("BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω. –£–∫–∞–∂–∏—Ç–µ –µ–≥–æ –≤ .env")

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç–æ–π –≤ .env
ADMIN_IDS = {
    int(x.strip())
    for x in os.getenv("ADMIN_IDS", "").split(",")
    if x.strip().isdigit()
}

# -------------------- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ --------------------
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(name)s: %(message)s",
)
logger = logging.getLogger("roblox_vip_bot")

# -------------------- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ --------------------
bot = telebot.TeleBot(BOT_TOKEN, parse_mode="HTML")

# -------------------- –°–ø–∏—Å–æ–∫ –∏–≥—Ä --------------------
# –ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã -> slug (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∫–ª—é—á–µ–π –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è)
GAME_SLUGS: Dict[str, str] = {
    "Adopt Me": "ADOPT_ME",
    "Grow A Garden": "GROW_A_GARDEN",
    "Murder Mystery 2": "MURDER_MYSTERY_2",
    "Jailbreak": "JAILBREAK",
    "Blox Fruits": "BLOX_FRUITS",
    "Pls Donate": "PLS_DONATE",
}

# -------------------- –†–µ–≥—É–ª—è—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ URL --------------------
URL_RE = re.compile(r"^https?://[^\s]+$", re.IGNORECASE)

# -------------------- –ê–Ω—Ç–∏—Å–ø–∞–º --------------------
USER_LAST_TS: Dict[int, float] = {}
COOLDOWN_SECONDS = 1.0

def is_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."""
    return user_id in ADMIN_IDS

def env_key_for_slug(slug: str) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª—é—á –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Å—Å—ã–ª–∫–∏."""
    return f"LINK_{slug}"

def get_link_by_slug(slug: str) -> Optional[str]:
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –ø–æ slug –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è."""
    return os.getenv(env_key_for_slug(slug))

def set_link_by_slug(slug: str, url: str) -> None:
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–≤ –ø–∞–º—è—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞)."""
    os.environ[env_key_for_slug(slug)] = url

def validate_url(url: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º URL."""
    return bool(URL_RE.match(url))

def rate_limit_ok(user_id: int) -> bool:
    """–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–∞–º–∏."""
    now = time.time()
    last = USER_LAST_TS.get(user_id, 0.0)
    if now - last < COOLDOWN_SECONDS:
        return False
    USER_LAST_TS[user_id] = now
    return True

def main_menu_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å –≤—ã–±–æ—Ä–æ–º –∏–≥—Ä—ã."""
    kb = InlineKeyboardMarkup(row_width=2)
    buttons = []
    for title, slug in GAME_SLUGS.items():
        buttons.append(InlineKeyboardButton(text=title, callback_data=f"game:{slug}"))
    for i in range(0, len(buttons), 2):
        kb.row(*buttons[i:i+2])
    kb.row(
        InlineKeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about"),
        InlineKeyboardButton("üßæ –í—Å–µ —Å—Å—ã–ª–∫–∏", callback_data="list_all"),
    )
    return kb

def links_kb(links: Dict[str, str]) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏-—Å—Å—ã–ª–∫–∞–º–∏ –¥–ª—è –∏–≥—Ä."""
    kb = InlineKeyboardMarkup()
    for title, url in links.items():
        kb.add(InlineKeyboardButton(f"üîó {title}", url=url))
    kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_main"))
    return kb

def admin_menu_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫."""
    kb = InlineKeyboardMarkup(row_width=2)
    for title, slug in GAME_SLUGS.items():
        kb.insert(InlineKeyboardButton(f"‚úèÔ∏è {title}", callback_data=f"admin:set:{slug}"))
    kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_main"))
    return kb

def title_by_slug(slug: str) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –ø–æ slug."""
    for title, s in GAME_SLUGS.items():
        if s == slug:
            return title
    return slug

# -------------------- –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ --------------------
@bot.message_handler(commands=["start"])
def cmd_start(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    if not rate_limit_ok(message.from_user.id):
        return
    bot.send_message(message.chat.id, "<b>–ü—Ä–∏–≤–µ—Ç!</b>\n–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É –Ω–∏–∂–µ üëá", reply_markup=main_menu_kb())

@bot.message_handler(commands=["links"])
def cmd_links(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /links ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ —Å–æ –≤—Å–µ–º–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏."""
    if not rate_limit_ok(message.from_user.id):
        return
    links = {title: url for title, slug in GAME_SLUGS.items() if (url := get_link_by_slug(slug))}
    if not links:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –°—Å—ã–ª–∫–∏ –ø–æ–∫–∞ –Ω–µ –∑–∞–¥–∞–Ω—ã.")
        return
    bot.send_message(message.chat.id, "<b>–°—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å–µ –∏–≥—Ä—ã:</b>", reply_markup=links_kb(links))

@bot.message_handler(commands=["admin"])
def cmd_admin(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /admin ‚Äî –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    if not rate_limit_ok(message.from_user.id):
        return
    if not is_admin(message.from_user.id):
        bot.reply_to(message, "‚õî –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
        return
    bot.send_message(message.chat.id, "<b>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>", reply_markup=admin_menu_kb())

# -------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫ --------------------
@bot.callback_query_handler(func=lambda c: True)
def on_callback(call: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –∫–Ω–æ–ø–æ–∫."""
    data = call.data or ""
    if data.startswith("game:"):
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –∏–≥—Ä—É
        slug = data.split(":", 1)[1]
        title = title_by_slug(slug)
        url = get_link_by_slug(slug)
        if url:
            bot.send_message(call.message.chat.id, f"<b>{title}</b>\n–ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è ‚Äî –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=links_kb({title: url}))
        else:
            bot.send_message(call.message.chat.id, f"‚ö†Ô∏è –°—Å—ã–ª–∫–∞ –¥–ª—è <b>{title}</b> –Ω–µ –∑–∞–¥–∞–Ω–∞.")
    elif data == "about":
        bot.send_message(call.message.chat.id, "–≠—Ç–æ—Ç –±–æ—Ç –≤—ã–¥–∞—ë—Ç VIP-—Å—Å—ã–ª–∫–∏ –Ω–∞ Roblox —Å–µ—Ä–≤–µ—Ä–∞.")
    elif data == "list_all":
        # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏ –∫–Ω–æ–ø–∫–∞–º–∏
        links = {title: url for title, slug in GAME_SLUGS.items() if (url := get_link_by_slug(slug))}
        if not links:
            bot.send_message(call.message.chat.id, "‚ö†Ô∏è –°—Å—ã–ª–∫–∏ –ø–æ–∫–∞ –Ω–µ –∑–∞–¥–∞–Ω—ã.")
        else:
            bot.send_message(call.message.chat.id, "<b>–°—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å–µ –∏–≥—Ä—ã:</b>", reply_markup=links_kb(links))
    elif data.startswith("admin:set:"):
        # –ê–¥–º–∏–Ω –≤—ã–±–∏—Ä–∞–µ—Ç –∏–≥—Ä—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏
        if not is_admin(call.from_user.id):
            bot.answer_callback_query(call.id, text="–¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤")
            return
        slug = data.split(":")[-1]
        title = title_by_slug(slug)
        msg = bot.send_message(call.message.chat.id, f"‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –¥–ª—è <b>{title}</b>. –û—Ç–ø—Ä–∞–≤—å—Ç–µ '–æ—Ç–º–µ–Ω–∞' –¥–ª—è –æ—Ç–º–µ–Ω—ã.")
        bot.register_next_step_handler(msg, handle_new_link_input, slug)
    elif data == "back_main":
        # –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        bot.edit_message_text("–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É –Ω–∏–∂–µ üëá", chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=main_menu_kb())

# -------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–π —Å—Å—ã–ª–∫–∏ --------------------
def handle_new_link_input(message: Message, slug: str):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–π —Å—Å—ã–ª–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."""
    if not is_admin(message.from_user.id):
        bot.reply_to(message, "‚õî –ù–µ—Ç –ø—Ä–∞–≤.")
        return
    text = (message.text or "").strip()
    if text.lower() == "–æ—Ç–º–µ–Ω–∞":
        bot.send_message(message.chat.id, "–û—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=admin_menu_kb())
        return
    if not validate_url(text):
        msg = bot.send_message(message.chat.id, "‚ùå –≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Å—Å—ã–ª–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ '–æ—Ç–º–µ–Ω–∞'.")
        bot.register_next_step_handler(msg, handle_new_link_input, slug)
        return
    set_link_by_slug(slug, text)
    bot.send_message(message.chat.id, f"‚úÖ –°—Å—ã–ª–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è <b>{title_by_slug(slug)}</b>.", reply_markup=admin_menu_kb())

# -------------------- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ --------------------
if __name__ == "__main__":
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    bot.infinity_polling(timeout=60, long_polling_timeout=50)
